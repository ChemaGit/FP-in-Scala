package collections

object Methods {
	def main(args: Array[String]): Unit = {
		println("Methods to take parts of collections")
		val a = Array(5,4,6,7,8,4)
		val aDrop = a.drop(2)
		println("drop Method: " + aDrop.mkString(","))
		val aInit = a.init
		println("init Method: " + aInit.mkString(","))
		val aLast = a.last
		println("last Method: " + aLast)
		val aSlice = a.slice(2,4)
		println("slice Method: " + aSlice.mkString(","))
		val aSplitAt = a.splitAt(3)
		println("splitAt Method: " + aSplitAt._1.mkString(",") + " | " + aSplitAt._2.mkString(","))
		val aTake = a.take(3)
		println("take Method: " + aTake.mkString(","))
		val aDropRight = a.dropRight(3)
		println("dropRight Method: " + aDropRight.mkString(","))
		val aTakeRight = a.takeRight(3)
		println("takeRight Method: " + aTakeRight.mkString(","))

		println("Methods to look up inside collections")
		println("contains Method a.contains(6): " + a.contains(6))
		println("endsWith Method a.endsWith(Array(8,4)): " + a.endsWith(Array(8,4)))
		println("endsWith Method a.endsWith(Array(7,6)): " + a.endsWith(Array(7,6)))
		println("endsWith Method a.endsWith(List(8,4)): " + a.endsWith(List(8,4)))
		println("isEmpty Method a.isEmpty: " + a.isEmpty)
		println("nonEmpty Method a.nonEmpty: " + a.nonEmpty)
		println("startsWith Method a.startsWith(Array(5,4)): " + a.startsWith(Array(5,4)))
		println("startWith Method a.startsWith(Array(7,4)): " + a.startsWith(Array(7,4)))
		println("indexOf Method a.indexOf(6): " + a.indexOf(6))
		println("lastIndexOf Method a.lastIndexOf(6): " + a.lastIndexOf(6))

		println("Other Methods")
		println("diff Method a.diff(Array(7,2,8,9,4,5)): " + a.diff(Array(7,2,8,9,4,5)).mkString(","))
		val b = Array(1,1,1,8,3,4,8,8,4,4,3,3)
		println("distinct Method b.distinct: " + b.distinct.mkString(","))
		println("mkString Method a.mkString: " + a.mkString)
		println(s"""mkString Method a.mkString(","): """ + a.mkString(","))
		println(s"""mkString Method a.mkString("(",",",")"): """ + a.mkString("(",",",")"))
		println("patch Method a.patch(2, Nil, 3): " + a.patch(2,Nil,3))
		println("patch Method a.patch(2, Array(15,21,33,44), 3): " + a.patch(2,Array(15,21,33,44),3).mkString(","))
		println("reverse Method a.reverse: " + a.reverse.mkString(","))
		println("toList Method a.toList: " + a.toList.mkString(","))
		println("zip Method a.zip(Array(5,4,6,2,1,2)): " + a.zip(Array(5,4,6,2,1,2)).mkString(","))
		println("zipWithIndex Method a.zipWithIndex: " + a.zipWithIndex.mkString(","))
		println("min Method a.min: " + a.min)
		println("max Method a.max: " + a.max)
		println("sum Method a.sum: " + a.sum)
		println("product Method a.product: " + a.product)
		println("a.sum/a.length.toDouble => average: " + a.sum / a.length.toDouble)
	}
}
